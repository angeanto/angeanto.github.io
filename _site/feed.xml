<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-12-23T17:52:21+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Antonis Angelakis</title><subtitle>Posting related data stuff.</subtitle><author><name>Antonis Angelakis</name></author><entry><title type="html">Run python scripts and use output tables with Tableau Table Extension</title><link href="http://localhost:4000/Run-python-scripts-with-Tableau-Table-Extension/" rel="alternate" type="text/html" title="Run python scripts and use output tables with Tableau Table Extension" /><published>2022-12-19T00:00:00+02:00</published><updated>2022-12-19T00:00:00+02:00</updated><id>http://localhost:4000/Run%20python-scripts-with-Tableau-Table-Extension</id><content type="html" xml:base="http://localhost:4000/Run-python-scripts-with-Tableau-Table-Extension/">&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;Suppose working in a Tableau workbook and need to make some operations that either are impossible with Tableau or a bit hard. You realise that it would be achieved more easily, in a straightforward and readable way by using some Python code. Another case could be to &lt;strong&gt;make some predictions inside the workbook by running a simple scikit-learn model.&lt;/strong&gt; You want the model to run everytime the data is refreshed.
&lt;a href=&quot;https://www.tableau.com/blog/release-data-guide-table-extensions-dynamic-zone-visibility&quot;&gt;Available in Tableau 2022.3&lt;/a&gt;, &lt;a href=&quot;https://help.tableau.com/current/pro/desktop/en-us/td_table_extensions.htm&quot;&gt;Table Extensions&lt;/a&gt; allow you to create new data tables with an analytics extensions script. We can write a custom Python script using TabPy and optionally add one or more input tables. &lt;strong&gt;Using Table Extensions, you can unlock new data and transform, augment, score, or otherwise modify our data using Analytics Extensions like Python, R, and Einstein Discovery.&lt;/strong&gt;&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; Table extensions differs from writing code directly as Tableau calculated fields. It unlocks the capability to use a table in the tableau data model as output after some Python processing.&lt;/p&gt;

&lt;h2 id=&quot;setup--configuration&quot;&gt;Setup &amp;amp; Configuration&lt;/h2&gt;
&lt;p&gt;Let‚Äôs start cooking üßë‚Äçüç≥.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;br /&gt;
First, download Python from &lt;a href=&quot;https://www.python.org/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tableau Desktop&lt;/strong&gt;&lt;br /&gt;
Next, download &lt;a href=&quot;https://www.tableau.com/support/releases&quot;&gt;Tableau Desktop&lt;/a&gt;(&amp;gt;= 2022.3 version). We‚Äôll NOT use Tableau Server for this example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tabpy&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://tableau.github.io/TabPy/docs/server-install.html&quot;&gt;TabPy&lt;/a&gt;(the Tableau Python Server) is an Analytics Extension implementation that expands Tableau‚Äôs capabilities by allowing users to execute Python scripts and use the output either in a calculated field or as table extension.&lt;br /&gt;
To install TabPy using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip&lt;/code&gt;, run: &lt;br /&gt; 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install tabpy&lt;/code&gt;&lt;br /&gt;
and to start the server run: &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tabpy&lt;/code&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The desired output is something like this: &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/post_images/2.python_tableau/terminal_rounded.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By navigating to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:9004&lt;/code&gt; ensure that the server is running successfully.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/post_images/2.python_tableau/tabpy_server_rounded.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We are now ready to taste our food ü•Ñ.&lt;/p&gt;

&lt;h2 id=&quot;the-actual-thing&quot;&gt;The Actual Thing&lt;/h2&gt;
&lt;p&gt;We‚Äôll use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sample - Superstore&lt;/code&gt; dataset to build 5 clusters with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Quantity&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Discount&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Profit&lt;/code&gt; variables.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connection&lt;/strong&gt; &lt;br /&gt;
By navigating to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Settings and Performance&lt;/code&gt; and selecting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Manage Analytics Extension Connection&lt;/code&gt; connect with the python server.&lt;br /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/post_images/2.python_tableau/connect_rounded.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data pane&lt;/strong&gt;&lt;br /&gt;
We can now select any of the existing tables from our connections and notice that when a table is dragged into the pane the input table and output table selections appear in the bottom.We also can insert our script.&lt;br /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/post_images/2.python_tableau/code_pane_rounded.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; The image used above contains code and schema from another example.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;Our output table is shown as Table extension.In Script, enter your script, select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Apply&lt;/code&gt; and choose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Update&lt;/code&gt;. Now and the results will appear in the Output Table tab.
When the code runs, the output table will include any new columns from the returned python dictonary. The new column &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cluster&lt;/code&gt; has been created. 
&lt;img src=&quot;http://localhost:4000/assets/images/post_images/2.python_tableau/preview_rounded.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt;&lt;br /&gt;
The script contains the code below.&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;libraries&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt; 
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.preprocessing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StandardScaler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MinMaxScaler&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.cluster&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KMeans&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Convert tableau imported table to pandas df
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Fit K-Means
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kmeans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KMeans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_clusters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;random_state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Quantity&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Discount&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;Profit&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Get cluster assignment labels
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kmeans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels_&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Format results as a DataFrame
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Rename column
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;cluster&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Join to main dataframe
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orders_clusters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#Return table as dictionary
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orders_clusters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;list&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Clusters&lt;/strong&gt;&lt;br /&gt;
We can now visualize our clusters. In the &lt;strong&gt;Distribution&lt;/strong&gt; worksheet, we can say hello.&lt;br /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/post_images/2.python_tableau/barchart_rounded.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt; The &lt;strong&gt;Discount Profit&lt;/strong&gt; scatterplot displays the correlation between 2 out of the 3 independent variables highlighting the colour of each cluster.&lt;br /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/post_images/2.python_tableau/corr_rounded.png&quot; alt=&quot;image-center&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;In a nutshell‚Ä¶We‚Äôve managed to run python in Tableau Desktop locally and started a TabPy server. We can store data as dataframes from any database. Depending on our desired outcome, we may use tables from existing connections (or not), manipulate this data based on our needs and finally blend with the tables placed in our Tableau Data model. The python script should return a dictionary which will be used as the extended table.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.tableau.com/current/prep/en-us/prep_scripts_TabPy.htm&quot;&gt;https://help.tableau.com/current/prep/en-us/prep_scripts_TabPy.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/tabpy-combining-python-and-tableau-511b10da8175&quot;&gt;https://towardsdatascience.com/tabpy-combining-python-and-tableau-511b10da8175&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tableau.com/blog/release-data-guide-table-extensions-dynamic-zone-visibility&quot;&gt;https://www.tableau.com/blog/release-data-guide-table-extensions-dynamic-zone-visibility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.tableau.com/current/pro/desktop/en-us/td_table_extensions.htm&quot;&gt;https://help.tableau.com/current/pro/desktop/en-us/td_table_extensions.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Antonis Angelakis</name></author><category term="tableau" /><category term="python" /><category term="tabpy" /><summary type="html">Run python scripts and use output tables with Tableau Table Extension</summary></entry><entry><title type="html">Welcome to my data playground!</title><link href="http://localhost:4000/Welcome-to-my-data-playground/" rel="alternate" type="text/html" title="Welcome to my data playground!" /><published>2022-12-12T00:00:00+02:00</published><updated>2022-12-12T00:00:00+02:00</updated><id>http://localhost:4000/Welcome-to-my-data-playground</id><content type="html" xml:base="http://localhost:4000/Welcome-to-my-data-playground/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/post_images/welcome.png&quot; alt=&quot;no-alignment&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;So‚Ä¶this is my first blog post and if you read this now, I‚Äôm really glad you‚Äôre here. This is my data playground and I‚Äôm going to talk about data, business intelligence, data science, machine learning, big data and all this cool great stuff everyone talks about. I‚Äôm just another person with an opinion, but hopefully i‚Äôll defend it with some data. As this is my first post I‚Äôll tell you just a little about me.&lt;/p&gt;

&lt;h2 id=&quot;about-me&quot;&gt;About me&lt;/h2&gt;
&lt;p&gt;Working with data and talking for all this kind of stuff, really delights me. I try to be into as much as possible components of data analytics, from data engineering to data visualization. I really enjoy returning value to the business, enabling data mindsets, help people think of data, share best practices and in general everything that helps people optimize the way they work with data. We are also organising &lt;a href=&quot;https://usergroups.tableau.com/athensusergroup&quot;&gt;Athens Tableau User Group&lt;/a&gt; meetups with the rest of the team, inviting enthousiastic speakers, having the opportunity to connect with other data rockstars like you either  in person or online.&lt;/p&gt;
&lt;figure class=&quot;half&quot;&gt;
  &lt;img src=&quot;/assets/images/post_images/about_tug_2.jpg&quot; /&gt;
  &lt;img src=&quot;/assets/images/post_images/about_tug_1.jpg&quot; /&gt;
  &lt;figcaption&gt;1st in person Athens Tableau User Group Meetup&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;
&lt;p&gt;So I started content sharing on &lt;a href=&quot;https://www.linkedin.com/in/antonios-angelakis-249899101/&quot;&gt;LinkedIn&lt;/a&gt; and then really liked the idea of creating a blog. I didn‚Äôt know which is the best option to start, the goal was to communicate my thoughts.
This data playground aims to become a place where I can share my thoughts and opinions, interesting implementations and tips.
The idea is to cover topics related with the Business Intelligence stack from a tech perspective and talk about:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;BI Tools&lt;/li&gt;
  &lt;li&gt;SQL&lt;/li&gt;
  &lt;li&gt;Python/R&lt;/li&gt;
  &lt;li&gt;Cloud&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;plus anything that matters when it comes to interact with data such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Effective communication&lt;/li&gt;
  &lt;li&gt;Storytelling&lt;/li&gt;
  &lt;li&gt;Business understanding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It would be nice reaching out to me with any topics and ideas you feel is meaningful to write about.&lt;/p&gt;
&lt;h2 id=&quot;how&quot;&gt;How&lt;/h2&gt;
&lt;p&gt;Some good news is that it turns out that starting a blog is much easier than you think. The website is created with &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; using &lt;a href=&quot;https://mademistakes.com/work/jekyll-themes/minimal-mistakes/&quot;&gt;minimal mistakes&lt;/a&gt; theme where you can transform your plain text into static websites and blogs. I used &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; which hosts it directly from the GitHub repository. Like Github Pages mentions&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Just edit, push, and the changes are live.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It was cool and easy to modify the code, understand the logic behind Jekyll, setup &lt;a href=&quot;https://www.algolia.com/&quot;&gt;Algolia&lt;/a&gt;, setup &lt;a href=&quot;https://docs.netlify.com/&quot;&gt;Netlify&lt;/a&gt; for search, setup Google Analytics, deploy it to Github Pages and finally go live. It also made me to practice HTML and CSS since my Masters. I suppose it‚Äôs the perfect opportinity to get more familiar with SEO, tags, and front end in general. 
The website &lt;a href=&quot;https://github.com/angeanto/angeanto.github.io&quot;&gt;repo&lt;/a&gt; is public.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href=&quot;https://www.linkedin.com/in/antonios-angelakis-249899101/&quot;&gt;LinkedIn&lt;/a&gt;, where I already share some content. Some of it will be archived here soon. Hope to like it and keep in touch!&lt;/p&gt;

&lt;p&gt;Antonis&lt;/p&gt;</content><author><name>Antonis Angelakis</name></author><category term="general" /><summary type="html">So...this is my first blog post and if you read this now, I‚Äôm really glad you‚Äôre here.</summary></entry></feed>